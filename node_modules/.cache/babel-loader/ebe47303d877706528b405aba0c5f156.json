{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Personal\\\\OneDrive\\\\Documents\\\\GitHub\\\\FreshBuy-Ecommerce-React\\\\src\\\\contexts\\\\AuthContext\\\\AuthContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"1D4LzhVawjk5Loe3c+mKDv2OE/o=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { useAuth, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Personal/OneDrive/Documents/GitHub/FreshBuy-Ecommerce-React/src/contexts/AuthContext/AuthContext.jsx"],"names":["createContext","useContext","useState","AuthContext","AuthProvider","children","token","setToken","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEA,MAAMI,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;GAAMD,Y;;KAAAA,Y;;AAUN,MAAMI,OAAO,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMK,O;;AAEN,SAASA,OAAT,EAAkBJ,YAAlB","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(false);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport { useAuth, AuthProvider };\r\n"]},"metadata":{},"sourceType":"module"}